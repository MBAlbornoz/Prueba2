USE REVERPASS

/*
CREATE DATABASE REVERPASS
ON
(
NAME="BASE_REGISTROEMPLEADOS_DAT",
FILENAME="C:\BASEPRUEBA\BASEEMPLEADOS.mdf",
SIZE=3MB,
MAXSIZE=15MB,
FILEGROWTH=1MB
)
LOG ON
(
NAME="BASEDATOSRP_LOG",
FILENAME="C:\BASEPRUEBA\BASEEMPLEADOS.ldf",
SIZE=3MB,
MAXSIZE=15MB,
FILEGROWTH=1MB
)
*/

--DEBO INDICAR CON QUE BAS DE DATOS VOY A TRABAJAR
/*
USE REVERPASS

*/

--CREO LA TABLA CIUDADES EN LA BASE DE DATOS REVERPASS
/*
CREATE TABLE CUIDADES
(
	IDCIUDAD INT NOT NULL PRIMARY KEY,
	CIUDAD VARCHAR(30) NOT NULL,
	IDPROVINCIA INT NOT NULL,
)
*/

--CREACION TABLA SUCURSALES
/*
CREATE TABLE SUCURSALES
(
	IDSUCURSAL INT NOT NULL PRIMARY KEY,
	DIRECCION VARCHAR(50) NOT NULL,
	TELEFONO VARCHAR(30) NOT NULL,
	MAIL VARCHAR (50) NULL,
	IDCIUDAD INT,
)
*/

--VER ERROR AL CREAR CLAVE FK
/*
ALTER TABLE SUCURSALES
--ALTER COLUMN IDCIUDAD INT NULL
ADD CONSTRAINT fk_idciudad FOREIGN KEY (IDCIUDAD) REFERENCES CIUDADES(IDSUCURSAL)

*/

--TABLA EMPLEADOS CREADA, VER ERROR CLAVE FK
/*
CREATE TABLE EMPLEADOS 
(
	LEGAJO INT NOT NULL,
	IDSUCURSAL INT NOT NULL,
	APELLIDO VARCHAR(50) NOT NULL,
	NOMBRE VARCHAR(50) NOT NULL,
	PRIMARY KEY (LEGAJO,IDSUCURSAL),

)
*/

--CREACION TABLA JUSTIFICACIONES
/*
CREATE TABLE JUSTIFICACIONES
(
	IDJUSTIFICACION INT NOT NULL PRIMARY KEY,
	JUSTIFICACION VARCHAR(60) NOT NULL
)
*/

--CREACION TABLA INSASISTENCIAS, VER ERROR FK
/*
CREATE TABLE INASISTENCIAS
(
	LEGAJO INT NOT NULL,
	IDSUCURSAL INT NOT NULL,
	FECHA DATE NOT NULL,
	IDJUSTIFICACION INT NULL,
	PRIMARY KEY (LEGAJO,IDSUCURSAL,FECHA)
)

*/

--RESTRICCION AGREGADA CORRECTAMENTE
/*
ALTER TABLE INASISTENCIAS
ADD CONSTRAINT FK_LEGAJOSUCURSAL FOREIGN KEY (LEGAJO, IDSUCURSAL) REFERENCES EMPLEADOS(LEGAJO,IDSUCURSAL)
*/

--RESTRICCION AGREGADA CORRECTAMENTE
/*
ALTER TABLE INASISTENCIAS
ADD CONSTRAINT FK_JUSTIFICACION FOREIGN KEY (IDJUSTIFICACION) REFERENCES JUSTIFICACIONES(IDJUSTIFICACION)
*/

--RESTRICCION AGREGADA CORRECTAMENTE
/*
ALTER TABLE EMPLEADOS
ADD CONSTRAINT FK_IDSUCURSAL FOREIGN KEY (IDSUCURSAL) REFERENCES SUCURSALES (IDSUCURSAL)
*/


--RESTRICCION AGREGADA CORRECTAMENTE
/*
ALTER TABLE SUCURSALES
ADD CONSTRAINT FK_IDCIUDAD FOREIGN KEY (IDCIUDAD) REFERENCES CIUDADES (IDCIUDAD)
*/

--iNSERTAR REGISTROS A TABLA INDICADA
/*
INSERT INTO EMPLEADOS(LEGAJO,IDSUCURSAL,APELLIDO,NOMBRE)
VALUES(0101,1,'NEWAPE','NEWNOMBRE')
*/

--INSERTAR REGISTRO UTILIZANDO SELECT, DEBE SER EN EL MISMO ORDEN PARAMETRO
/*
INSERT INTO EMPLEADOS (LEGAJO,IDSUCURSAL,APELLIDO,NOMBRE)
SELECT 0103,1,'NEWAPE2','NEWNOMBRE3'
*/

--VEO REGISTRO MODIFICADO
/*
SELECT *FROM EMPLEADOS
*/

--SELECT *FROM INASISTENCIAS

--INGRESO ORDENANDO FORMATO FECHA MESDIAAÑO
/*
SET DATEFORMAT 'MDY'
INSERT INTO INASISTENCIAS (LEGAJO,IDSUCURSAL,FECHA,IDJUSTIFICACION)
VALUES(1099,1,'04/25/1998',1)
*/

--CREO CONDICION WHERE PARA MODIFICAR SOLO UNA COLUMNA
/*
SELECT *FROM INASISTENCIAS
UPDATE INASISTENCIAS SET IDJUSTIFICACION=1 WHERE FECHA='1998/04/01'
--
SELECT *FROM INASISTENCIAS
UPDATE INASISTENCIAS SET IDJUSTIFICACION=2 WHERE FECHA='2019-01-20'
*/

--MODIFICAR VARIOS CAMPOS UTILIZANDO LA CONDICION WHERE
/*
SELECT *FROM EMPLEADOS
UPDATE EMPLEADOS SET IDSUCURSAL=2,APELLIDO='MODIFICADO', NOMBRE='NUEVO' WHERE LEGAJO=103
*/

--MODIFICA CONJUNTO DE DATOS CON ALGO EN COMUN, EN ESTE CASO, UTILICE EL LEGAJO.
/*
SELECT *FROM INASISTENCIAS
UPDATE INASISTENCIAS SET IDJUSTIFICACION=NULL WHERE LEGAJO=109
*/

--ERROR QUE SE COMETE AL NO USAR CLAUSULA WHERE, CON ESTA SELECCION, TODOS MIS REGISTROS PASARON A TENER EL NOMBRE ASIGNADO
/*
UPDATE EMPLEADOS SET NOMBRE='CARLITOS'
*/

--ELIMINAR REGISTRO UTILIZANDO CONDICION WHERE
/*
DELETE FROM EMPLEADOS WHERE LEGAJO=3735
*/

--BUSCA EN LA TABLA EN EL REGISTRO APELLIDOS UN REGITRO QUE TENGA ANTES DEL FINAL E INICIALES
/*
SELECT * FROM EMPLEADOS WHERE APELLIDO LIKE '%RN%'
*/

/*
1 left join
5 inner join
3 group by
2 order by
6 having
4 stored procedure
 */

 --MUESTRA LOS REGISTROS APELLIDO Y LEGAJO DE LA TABLA EMPLEADOS ORDENADOS POR APELLIDO DE DE LA A A LA Z
/*
SELECT APELLIDO, LEGAJO FROM EMPLEADOS ORDER BY APELLIDO ASC
*/

 --MUESTRA LAS COLUMNAS DE LA TABLA SUCURSALES ORDENADOS POR IDSUCURSAL DE MAYOR A MENOR
 /*
 SELECT IDSUCURSAL, DIRECCION, TELEFONO FROM SUCURSALES ORDER BY IDSUCURSAL DESC
 */

-- SELECCIONA TODOS LOS  REGISTROS DE LAS COLUMNAS INDICADAS DE LA TABLA EMPLEADOS
/*
 SELECT ALL LEGAJO, APELLIDO FROM EMPLEADOS
*/

-- SELECCIONA DE LA TABLA EMPLEADOS LAS COLUMNAS LEGAJO Y APELLIDO, ORDENADO POR APELLIDO EN FORMA ASCENDENTE
/*
 SELECT ALL LEGAJO, APELLIDO FROM EMPLEADOS 
		ORDER BY APELLIDO
*/

--SELECT *FROM EMPLEADOS

--INSERT INTO INASISTENCIAS (LEGAJO, IDSUCURSAL,IDJUSTIFICACION, FECHA)
--VALUES (1010,1,2,'04/25/2019')


-- COMBINA DOS TABLAS MOSTRANDO LOS DATOS SOLICITADOS, SIEMPRE Y CUANDO SE CUMPLA LA CONDICION / SE AGREGA QUE SE ORDENE POR FECHA DE FORMA ASC
/*
SELECT  EMPLEADOS.APELLIDO, EMPLEADOS.NOMBRE, INASISTENCIAS.FECHA, INASISTENCIAS.IDJUSTIFICACION
FROM EMPLEADOS INNER JOIN INASISTENCIAS
ON EMPLEADOS.LEGAJO=INASISTENCIAS.LEGAJO
ORDER BY FECHA
*/

-- COMBINA DOS TABLAS MOSTRANDO LOS DATOS SOLICITADOS PERO CREANDO CON ALIAS
-- DE ESTA MANERA EVITO TENER QUE ESCRIBIR TODO, SIEMPRE Y CUANDO SE CUMPLA LA CONDICION / SE AGREGA QUE SE ORDENE POR FECHA DE FORMA ASC
/*
SELECT  E.APELLIDO, E.NOMBRE, I.FECHA, I.IDJUSTIFICACION
FROM EMPLEADOS AS E INNER JOIN INASISTENCIAS AS I
ON E.LEGAJO=I.LEGAJO
*/

-- LA SENTENCIA LEFT JOIN LISTA TODOS LOS REGISTROS DE LA TABLA A, AUNQUE NO CUMPLAN CON LA CONDICION,
--EN ESTE CASO, A LA DERECHA SE VERA EL VALOR NULL EN AQUELLOS QUE NO CUMPLAN LA CONDICION
/*
SELECT  E.APELLIDO, E.NOMBRE, I.FECHA, I.IDJUSTIFICACION
FROM EMPLEADOS AS E LEFT JOIN INASISTENCIAS AS I
ON E.LEGAJO=I.LEGAJO
*/

--LA SENTENCIA RIGTH JOIN, VA A INCLUIR TODOS LOS REGISTROS DE LA TABLA B, AUNQUE NO CUMPLAN LA CONDICION
--AL IGUAL QUE CON LEFT, COMPLETARA CON NULL LOS REGISTROS QUE NO CUMPLAN LA CONDICION
/*
SELECT  E.APELLIDO, E.NOMBRE, I.FECHA, I.IDJUSTIFICACION
FROM EMPLEADOS AS E RIGHT JOIN INASISTENCIAS AS I
ON E.LEGAJO=I.LEGAJO
*/

--COMBINACION MAS DE DOS TABLAS CUMPLIENDO LA CONDICION, LOS RELACIONA POR EL REGISTRO EN COMUN
/*
SELECT  APELLIDO, NOMBRE, FECHA, J.JUSTIFICACION, CIUDAD
FROM EMPLEADOS AS E INNER JOIN INASISTENCIAS AS I ON E.LEGAJO=I.LEGAJO
INNER JOIN JUSTIFICACIONES AS J ON J.IDJUSTIFICACION=I.IDJUSTIFICACION
INNER JOIN SUCURSALES AS S ON S.IDSUCURSAL=I.IDSUCURSAL
INNER JOIN CIUDADES C ON C.IDCIUDAD=S.IDCIUDAD
ORDER BY APELLIDO
*/


SELECT  E.APELLIDO, E.NOMBRE, I.FECHA, J.JUSTIFICACION, C.CIUDAD
FROM EMPLEADOS AS E LEFT JOIN INASISTENCIAS AS I ON E.LEGAJO=I.LEGAJO
LEFT JOIN JUSTIFICACIONES AS J ON J.IDJUSTIFICACION=I.IDJUSTIFICACION
LEFT JOIN SUCURSALES AS S ON S.IDSUCURSAL=I.IDSUCURSAL
LEFT JOIN CIUDADES C ON C.IDCIUDAD=S.IDCIUDAD
WHERE J.JUSTIFICACION IS NULL